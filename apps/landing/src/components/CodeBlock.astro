---
import { Code } from 'astro:components';

export interface Props {
  code: string;
  filename?: string;
  lang?: 'typescript' | 'bash';
}

const { code, filename = 'vyft.config.ts', lang = 'typescript' } = Astro.props;
---

<div class="code-block rounded-t-lg">
  <!-- Window chrome -->
  <div class="window-chrome">
    <div class="window-controls">
      <div class="control control-red"></div>
      <div class="control control-yellow"></div>
      <div class="control control-green"></div>
    </div>
    <span class="filename">{filename}</span>
  </div>

  <!-- Code content -->
  <div class="code-content">
    <div class="code-dark">
      <Code code={code} lang={lang} theme="dark-plus" />
    </div>
    <div class="code-light">
      <Code code={code} lang={lang} theme="github-light" />
    </div>
  </div>
</div>

<style>
  .code-block {
    background: var(--color-card);
    border: 1px solid var(--color-border);
    overflow: hidden;
  }

  /* Light mode specific styling */
  @media (prefers-color-scheme: light) {
    .code-block {
      background: #fafafa;
      border-color: #e5e7eb;
    }
  }

  .window-chrome {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    border-bottom: 1px solid var(--color-border);
    background: rgb(from var(--color-muted) r g b / 0.1);
  }

  .window-controls {
    display: flex;
    gap: 0.5rem;
  }

  .control {
    width: 0.75rem;
    height: 0.75rem;
    border-radius: 50%;
  }
  
  @media (max-width: 640px) {
    .control {
      width: 0.625rem;
      height: 0.625rem;
    }
  }

  .control-red {
    background-color: #ef4444;
    opacity: 0.7;
  }

  .control-yellow {
    background-color: #eab308;
    opacity: 0.7;
  }

  .control-green {
    background-color: #22c55e;
    opacity: 0.7;
  }

  .filename {
    margin-left: 0.75rem;
    font-size: 0.75rem;
    color: var(--color-muted-foreground);
    font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Menlo, 'Courier New', monospace;
  }

  .code-content {
    overflow-x: auto;
    max-width: 100%;
  }

  /* Theme switching */
  .code-light {
    display: block;
  }
  
  .code-dark {
    display: none;
  }
  
  @media (prefers-color-scheme: dark) {
    .code-light {
      display: none;
    }
    
    .code-dark {
      display: block;
    }
  }

  /* Override Astro Code component styles */
  .code-content :global(pre) {
    margin: 0;
    padding: 1.5rem;
    background: transparent !important;
    font-size: 0.875rem;
    line-height: 1.7;
    max-width: 100%;
    overflow-x: auto;
  }

  /* Mobile improvements */
  @media (max-width: 768px) {
    .code-content :global(pre) {
      padding: 1rem;
      font-size: 0.8125rem;
      line-height: 1.6;
    }
    
    .window-chrome {
      padding: 0.5rem 0.75rem;
    }
    
    .filename {
      font-size: 0.6875rem;
    }
  }
  
  @media (max-width: 640px) {
    .code-content :global(pre) {
      padding: 0.875rem;
      font-size: 0.75rem;
      line-height: 1.5;
    }
    
    .window-chrome {
      padding: 0.5rem 0.625rem;
      gap: 0.375rem;
    }
    
    .filename {
      font-size: 0.625rem;
      margin-left: 0.5rem;
    }
  }

  .code-content :global(code) {
    font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Menlo, 'Courier New', monospace;
    background: transparent !important;
  }

  /* Add line numbers if using shiki's lineNumbers option */
  .code-content :global(.line) {
    display: inline-block;
    width: 100%;
  }
</style>
